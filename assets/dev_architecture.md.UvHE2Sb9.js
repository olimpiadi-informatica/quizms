import{_ as a,c as r,b as o,w as e,a4 as n,a5 as l,o as i,I as s,a as c,D as d}from"./chunks/framework.JbthyWhw.js";const S=JSON.parse('{"title":"Architettura","description":"","frontmatter":{},"headers":[],"relativePath":"dev/architecture.md","filePath":"dev/architecture.md","lastUpdated":1732453516000}'),u={name:"dev/architecture.md"},p=l('<h1 id="architettura" tabindex="-1">Architettura <a class="header-anchor" href="#architettura" aria-label="Permalink to &quot;Architettura&quot;">​</a></h1><p>QuizMS è un framework che permette la generazione di siti web statici che possono essere hostati su servizi come Github Pages, Firebase Hosting, ecc. QuizMS non ha un server e non supporta il server-side rendering, tutta la logica avviene o lato client, o durante la compilazione.</p><p>Ciò rende un po&#39; più complicata la gestione del database e dell&#39;autenticazione. Al momento queste parti vengono gestite attraverso Firestore e Firebase Authentication, che possono essere utilizzate direttamente lato client senza bisogno di un server. Sebbene QuizMS sia stato progettato per essere indipendente dal backend utilizzato, al momento l&#39;unico backend supportato è Firebase e la logica interna è ottimizzata per funzionare con il modello di dati di Firestore.</p><h2 id="librerie-utilizzate" tabindex="-1">Librerie utilizzate <a class="header-anchor" href="#librerie-utilizzate" aria-label="Permalink to &quot;Librerie utilizzate&quot;">​</a></h2><p>QuizMS è basato principalmente su <a href="https://vitejs.dev/" target="_blank" rel="noreferrer">Vite</a>: un bundler che permette di personalizzare a fondo il processo di build.</p><p>Le altre principali librarie usate sono:</p><ul><li><a href="https://react.dev/" target="_blank" rel="noreferrer">React</a>: UI.</li><li><a href="https://tailwindcss.com/" target="_blank" rel="noreferrer">Tailwind CSS</a>: CSS.</li><li><a href="https://mdxjs.com/" target="_blank" rel="noreferrer">MDX</a> con i plugin <a href="https://unifiedjs.com/learn/guide/introduction-to-unified/" target="_blank" rel="noreferrer">remark/rehype/recma</a>: parsing dei problemi in Markdown.</li><li><a href="https://developers.google.com/blockly" target="_blank" rel="noreferrer">Blockly</a>: codice a blocchi.</li><li><a href="https://lodash.com/" target="_blank" rel="noreferrer">Lodash</a>: utility generiche.</li><li><a href="https://lucide.dev/" target="_blank" rel="noreferrer">Lucide</a>: icone.</li><li><a href="https://github.com/molefrog/wouter" target="_blank" rel="noreferrer">Wouter</a>: routing.</li><li><a href="https://zod.dev/" target="_blank" rel="noreferrer">Zod</a>: validazione dei dati.</li></ul><h2 id="testi" tabindex="-1">Testi <a class="header-anchor" href="#testi" aria-label="Permalink to &quot;Testi&quot;">​</a></h2><p>I testi sono scritti in Markdown o MDX e vengono trasformati in JavaScript attraverso <code>@mdx-js/mdx</code>, la trasformazione avviene in più fasi:</p><ul><li>il file parsato in <a href="https://github.com/syntax-tree/mdast" target="_blank" rel="noreferrer">MDAST</a> (Markdown Abstract Syntax Tree);</li><li>vengono applicati i plugin <a href="https://github.com/remarkjs/remark" target="_blank" rel="noreferrer">remark</a>;</li><li>il MDAST viene trasformato in <a href="https://github.com/syntax-tree/hast" target="_blank" rel="noreferrer">HAST</a> (HTML Abstract Syntax Tree);</li><li>vengono applicati i plugin <a href="https://github.com/rehypejs/rehype" target="_blank" rel="noreferrer">rehype</a>;</li><li>il HAST viene trasformato in <a href="https://github.com/estree/estree" target="_blank" rel="noreferrer">ESTREE</a> (ECMAScript Abstract Syntax Tree);</li><li>vengono applicati i plugin <a href="https://mdxjs.com/docs/extending-mdx/#list-of-plugins" target="_blank" rel="noreferrer">recma</a>;</li><li>l&#39;ESTREE viene trasformato in JavaScript;</li><li>il codice JavaScript di ogni problema viene unito in un unico file JavaScript.</li></ul><p>Durante lo sviluppo, il codice non subisce ulteriori trasformazioni e viene eseguito nel browser.</p><p>Durante le gare, invece, il codice effettua dei passaggi in più:</p><ul><li>il codice <strong>viene eseguito</strong> utilizzando il runtime JSX di QuizMS che produce nuovamente un ESTREE del codice stesso;</li><li>vengono rimosse le parti sensibili del codice (es. le soluzioni);</li><li>l&#39;ordine delle domande e delle risposte viene cambiato in base alla variante scelta;</li><li>l&#39;ESTREE viene trasformato in JavaScript e viene minimizzato;</li><li>il codice viene salvato nel database.</li></ul><p>Il codice viene eseguito in modo da rimuovere tutto il codice JavaScript superfluo e produce del codice completamente statico senza variabili, cicli e selezioni. Sebbene questa parte sia essenziale per rimuovere tutte le informazioni sensibili dal codice, non permette di avere del codice interattivo, ad esempio con Blockly.</p>',14);function h(m,b,g,A,f,v){const t=d("Mermaid");return i(),r("div",null,[p,(i(),o(n,null,{default:e(()=>[s(t,{id:"mermaid-144",class:"mermaid",graph:"flowchart%20LR%0A%20%20%20%20subgraph%20plugin%20remark%0A%20%20%20%20%20%20%20%20md1%5BMDAST%5D%0A%20%20%20%20%20%20%20%20md2%5BMDAST%5D%0A%20%20%20%20%20%20%20%20mdc%5BMDAST%5D%0A%20%20%20%20end%0A%20%20%20%20subgraph%20plugin%20rehype%0A%20%20%20%20%20%20%20%20h1%5BHAST%5D%0A%20%20%20%20%20%20%20%20h2%5BHAST%5D%0A%20%20%20%20%20%20%20%20hc%5BHAST%5D%0A%20%20%20%20end%0A%20%20%20%20subgraph%20plugin%20recma%0A%20%20%20%20%20%20%20%20es1%5BESTREE%5D%0A%20%20%20%20%20%20%20%20es2%5BESTREE%5D%0A%20%20%20%20%20%20%20%20esc%5BESTREE%5D%0A%20%20%20%20end%0A%20%20%20%20subgraph%20vite%0A%20%20%20%20%20%20%20%20bundle%5Bstatement.jsx%5D%0A%20%20%20%20end%0A%0A%20%20%20%20q1%5Bquestion1.mdx%5D%20--%3E%20md1%0A%20%20%20%20q2%5Bquestion2.mdx%5D%20--%3E%20md2%0A%20%20%20%20q3%5B...%5D%0A%20%20%20%20c%5Bcontest.mdx%5D%20--%3E%20mdc%0A%0A%20%20%20%20md1%20--%3E%20h1%0A%20%20%20%20md2%20--%3E%20h2%0A%20%20%20%20mdc%20--%3E%20hc%0A%0A%20%20%20%20h1%20--%3E%20es1%0A%20%20%20%20h2%20--%3E%20es2%0A%20%20%20%20hc%20--%3E%20esc%0A%0A%20%20%20%20es1%20--%3E%20bundle%0A%20%20%20%20es2%20--%3E%20bundle%0A%20%20%20%20esc%20--%3E%20bundle%0A%0A%20%20%20%20subgraph%20plugin%20vite%0A%20%20%20%20%20%20%20%20f1%5Bfig.asy%5D%20--%3E%20bundle%0A%20%20%20%20%20%20%20%20f2%5Bimage.svg%5D%20--%3E%20bundle%0A%20%20%20%20%20%20%20%20f3%5B...%5D%0A%20%20%20%20end%0A%0A%20%20%20%20bundle%20--%3E%20dev%5Bdevelopment%2Ftraining%20mode%5D%0A%0A%20%20%20%20subgraph%20shuffle%0A%20%20%20%20%20%20%20%20bundle%20--%20JSX%20runtime%20--%3E%20esb%5BESTREE%5D%0A%20%20%20%20end%0A%0A%20%20%20%20esb%5BESTREE%5D%20--%3E%20js%5Bstatement.js%5D%0A%20%20%20%20js%20--%3E%20Firestore%0A%20%20%20%20js%20--%3E%20PDF%0A"})]),fallback:e(()=>[c(" Loading... ")]),_:1}))])}const _=a(u,[["render",h]]);export{S as __pageData,_ as default};
